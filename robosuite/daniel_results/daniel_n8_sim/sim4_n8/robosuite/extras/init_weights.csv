policy,OrderedDict([('log_std', tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.])), ('mlp_extractor.shared_net.0.weight', tensor([[ 4.0270e-02,  2.7867e-01, -1.8865e-01],
        [ 4.7284e-02,  2.8355e-01, -4.8721e-02],
        [-1.0677e-01, -2.9129e-01,  2.4219e-01],
        [ 1.1661e-01,  4.0089e-02, -2.2299e-02],
        [-6.6412e-02,  2.1487e-01,  7.0556e-02],
        [-3.4128e-01,  8.8798e-02,  3.7126e-02],
        [-2.6306e-01,  2.1012e-01, -1.5152e-02],
        [ 1.3539e-01,  3.0720e-01,  6.7488e-02],
        [-5.4073e-02,  5.4973e-02, -3.0064e-01],
        [ 3.4819e-01, -1.3908e-01,  1.5886e-01],
        [-1.0578e-01,  1.7440e-01,  7.7952e-02],
        [ 8.5948e-02, -1.9171e-01, -1.3011e-01],
        [ 2.3392e-01, -1.8783e-01,  2.6643e-01],
        [ 2.7908e-01,  8.9438e-02, -2.2382e-01],
        [-1.3366e-01, -2.3383e-01,  3.1282e-01],
        [ 1.5577e-01,  1.3774e-01, -1.1033e-01],
        [-1.7161e-01,  2.7076e-01,  2.1222e-01],
        [ 2.2818e-02,  3.8004e-02, -1.9543e-01],
        [ 1.0443e-01, -2.1170e-01, -2.3019e-01],
        [ 1.6159e-01,  1.5739e-02,  1.2179e-01],
        [ 6.0851e-03, -9.5468e-02,  2.2764e-01],
        [-8.2673e-02,  4.5953e-02, -2.1586e-01],
        [-1.1674e-01,  9.8989e-02, -1.0197e-01],
        [-1.3650e-01,  1.0031e-01, -5.2138e-02],
        [-1.6685e-01,  1.8942e-01,  2.8367e-01],
        [ 3.1847e-01, -1.6483e-01, -1.3078e-01],
        [ 2.5325e-01,  3.1460e-01,  2.5503e-01],
        [-1.6687e-01, -2.5359e-01,  2.4803e-03],
        [-2.5903e-01,  1.5115e-01,  1.0785e-01],
        [ 4.3488e-01,  9.1894e-03,  6.4007e-02],
        [ 7.5780e-02, -4.8196e-02, -1.3072e-01],
        [ 1.6446e-01,  7.6859e-03, -1.6346e-01],
        [ 1.4537e-02,  2.5508e-02,  1.1167e-01],
        [-3.3236e-01, -6.7829e-02, -2.3160e-01],
        [ 1.5944e-01,  1.0730e-01, -1.2459e-01],
        [ 1.6000e-01, -1.9212e-01, -6.7801e-02],
        [ 1.0647e-01, -4.7431e-02,  3.6914e-01],
        [ 1.9888e-01, -1.1855e-01,  1.5088e-01],
        [-1.8458e-01,  2.3481e-01, -2.9579e-01],
        [-2.3085e-02,  2.2877e-01,  1.6614e-01],
        [ 1.3516e-01,  1.2050e-01,  6.4773e-02],
        [-2.4913e-02,  2.1722e-01,  1.5688e-01],
        [-1.5576e-01,  1.6799e-01, -6.8647e-02],
        [-1.1779e-01,  3.8033e-02, -1.0427e-01],
        [-2.7395e-01, -3.6541e-01,  7.2391e-02],
        [ 3.5723e-03, -8.0584e-02, -1.6904e-01],
        [-1.7465e-01, -1.9558e-02,  8.2784e-02],
        [ 1.9145e-01,  1.7689e-01,  2.8994e-01],
        [-4.2828e-02, -8.9968e-02,  2.4746e-01],
        [ 4.8372e-02, -1.2864e-02,  8.0786e-02],
        [-2.2054e-01, -3.3159e-02, -1.7389e-01],
        [-1.7649e-01,  6.7842e-02,  3.1918e-01],
        [-1.1043e-01, -2.3719e-01, -1.6909e-01],
        [-3.9305e-02, -2.9462e-03,  3.9082e-02],
        [-7.2115e-02, -1.1191e-02,  5.0441e-02],
        [ 3.4733e-01, -6.4975e-05, -3.5529e-02],
        [ 8.1289e-02,  2.0482e-02, -1.7453e-01],
        [-1.4916e-01,  1.2264e-01,  1.6701e-01],
        [-1.4343e-01,  1.9964e-01,  3.2095e-01],
        [-1.1531e-02,  3.2040e-01, -7.3683e-02],
        [-1.4702e-01,  9.3302e-02, -1.5263e-01],
        [ 8.9023e-02,  3.6948e-01, -2.6644e-01],
        [ 2.4518e-01,  3.6780e-01,  8.6707e-02],
        [ 1.4034e-01,  6.7483e-02, -7.3426e-02]])), ('mlp_extractor.shared_net.0.bias', tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])), ('action_net.weight', tensor([[ 1.5547e-03, -1.0857e-04, -8.9257e-04,  ...,  1.8441e-03,
         -3.0101e-04,  1.3316e-03],
        [ 1.5663e-03, -3.9478e-04, -1.2816e-03,  ...,  2.3553e-03,
         -5.7492e-05, -6.0483e-04],
        [ 1.8885e-03,  5.6580e-04, -7.4922e-04,  ...,  1.3768e-04,
          1.8492e-03,  1.3053e-03],
        ...,
        [ 1.4557e-04, -9.0837e-04, -1.1663e-03,  ..., -2.5002e-03,
          4.4300e-04, -4.0168e-05],
        [-1.6276e-03,  5.0506e-04,  1.6083e-03,  ..., -1.5924e-03,
          1.5302e-03, -9.0577e-04],
        [ 7.3834e-04, -1.1332e-03,  1.8537e-04,  ...,  2.0464e-03,
          1.1958e-03,  2.3348e-03]])), ('action_net.bias', tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.])), ('value_net.weight', tensor([[-0.1750,  0.1563, -0.0589, -0.0057, -0.2259, -0.1030, -0.0963,  0.1481,
         -0.2023, -0.0733,  0.0063, -0.0169, -0.0271, -0.1462, -0.0519,  0.1485,
         -0.2321,  0.1393,  0.0635,  0.0143,  0.0649, -0.1789, -0.1175,  0.0244,
          0.0686,  0.1528,  0.0446, -0.0284,  0.1377, -0.2327, -0.0637,  0.1154,
          0.1988, -0.0594, -0.0363,  0.0303, -0.0737,  0.0382,  0.0717, -0.3116,
          0.0390,  0.0241,  0.0141, -0.2171,  0.0892,  0.0844,  0.1958, -0.1118,
         -0.0007, -0.2315, -0.1100, -0.1733,  0.0916, -0.0461,  0.0694,  0.2310,
         -0.0234, -0.0172,  0.0301, -0.1428,  0.0344,  0.1748,  0.0102, -0.1328]])), ('value_net.bias', tensor([0.]))])
policy.optimizer,{'state': {}, 'param_groups': [{'lr': 0.0003, 'betas': (0.9, 0.999), 'eps': 1e-05, 'weight_decay': 0, 'amsgrad': False, 'maximize': False, 'foreach': None, 'capturable': False, 'params': [0, 1, 2, 3, 4, 5, 6]}]}
